"""
–ú–æ–¥—É–ª—å –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –º–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ—Å—Ç–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
–ø–µ—Ä–µ–≤–æ–¥–∞–º–∏ —Ç–µ–∫—Å—Ç–æ–≤ –Ω–∞ —Ä–∞–∑–Ω—ã–µ —è–∑—ã–∫–∏.
"""

from enum import Enum
from typing import Dict, Any


class Language(Enum):
    """–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏."""
    RUSSIAN = "ru"
    ENGLISH = "en"


# –°–ª–æ–≤–∞—Ä–∏ —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–∑—ã–∫–∞
TRANSLATIONS: Dict[Language, Dict[str, Any]] = {
    Language.RUSSIAN: {
        # –û–±—â–∏–µ —Å—Ç—Ä–æ–∫–∏
        "welcome_banner": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É",
        "farewell": "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã!",
        
        # –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        "progress": "–ü—Ä–æ–≥—Ä–µ—Å—Å",
        "result": "–†–µ–∑—É–ª—å—Ç–∞—Ç",
        "result_with_colon": "–†–µ–∑—É–ª—å—Ç–∞—Ç:",
        "calculation_result": "–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏—è:",
        "items_in_list": "–≠–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–ø–∏—Å–∫–µ",
        
        # –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        "enter_name": "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è",
        "enter_name_with_default": "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è [{default}]",
        "name_empty_error": "–ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è.",
        "invalid_input": "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
        "hello": "–ü—Ä–∏–≤–µ—Ç",
        "using_default_name": "–ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {name}",
        "timeout_message": "–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ.",
        
        # –û–ø–µ—Ä–∞—Ü–∏–∏
        "calculating": "–í—ã—á–∏—Å–ª—è–µ–º",
        "loading_items": "üîç –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤...",
        
        # –ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö
        "fruits": ["—è–±–ª–æ–∫–æ", "–±–∞–Ω–∞–Ω", "–≤–∏—à–Ω—è"],

        # –Ø–∑—ã–∫–æ–≤–æ–π –≤—ã–±–æ—Ä
        "select_language": "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫",
        "language_russian": "–†—É—Å—Å–∫–∏–π",
        "language_english": "English",
        "language_prompt": "–í–∞—à –≤—ã–±–æ—Ä (1/2): ",
        "invalid_language_choice": "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2.",
        "using_default_language": "–ò—Å–ø–æ–ª—å–∑—É–µ–º —è–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: –†—É—Å—Å–∫–∏–π"
    },
    
    Language.ENGLISH: {
        # Common strings
        "welcome_banner": "Welcome to the program",
        "farewell": "Thank you for using the program!",
        
        # Interface
        "progress": "Progress",
        "result": "Result",
        "result_with_colon": "Result:",
        "calculation_result": "Calculation result:",
        "items_in_list": "Items in the list",
        
        # User input
        "enter_name": "Enter your name",
        "enter_name_with_default": "Enter your name [{default}]",
        "name_empty_error": "Name cannot be empty. Please enter your name.",
        "invalid_input": "Invalid input. Please try again.",
        "hello": "Hello",
        "using_default_name": "Using default name: {name}",
        "timeout_message": "Timeout expired.",
        
        # Operations
        "calculating": "Calculating",
        "loading_items": "üîç Loading list items...",
        
        # Sample data
        "fruits": ["apple", "banana", "cherry"],

        # Language selection
        "select_language": "Select language",
        "language_russian": "Russian",
        "language_english": "English",
        "language_prompt": "Your choice (1/2): ",
        "invalid_language_choice": "Invalid choice. Please enter 1 or 2.",
        "using_default_language": "Using default language: Russian"
    }
}


class Localizer:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–µ–π —Ç–µ–∫—Å—Ç–æ–≤."""
    
    def __init__(self, language: Language = Language.RUSSIAN):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ª–æ–∫–∞–ª–∏–∑–∞—Ç–æ—Ä —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —è–∑—ã–∫–æ–º.
        
        Args:
            language: –Ø–∑—ã–∫ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π)
        """
        self.language = language
    
    def get_text(self, key: str) -> str:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ –∫–ª—é—á—É.
        
        Args:
            key: –ö–ª—é—á –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
            
        Returns:
            –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
        """
        translations = TRANSLATIONS.get(self.language, TRANSLATIONS[Language.RUSSIAN])
        return translations.get(key, f"[Missing translation: {key}]")
    
    def get_list(self, key: str) -> list:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ –∫–ª—é—á—É.
        
        Args:
            key: –ö–ª—é—á –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
            
        Returns:
            –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
        """
        translations = TRANSLATIONS.get(self.language, TRANSLATIONS[Language.RUSSIAN])
        return translations.get(key, [])
    
    def set_language(self, language: Language) -> None:
        """
        –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —è–∑—ã–∫ –¥–ª—è –ª–æ–∫–∞–ª–∏–∑–∞—Ç–æ—Ä–∞.
        
        Args:
            language: –ù–æ–≤—ã–π —è–∑—ã–∫
        """
        self.language = language


# –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ª–æ–∫–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
localizer = Localizer()


def get_text(key: str) -> str:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ –∫–ª—é—á—É.
    
    Args:
        key: –ö–ª—é—á –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
        
    Returns:
        –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    """
    return localizer.get_text(key)


def get_list(key: str) -> list:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ –∫–ª—é—á—É.
    
    Args:
        key: –ö–ª—é—á –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
        
    Returns:
        –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
    """
    return localizer.get_list(key)


def set_language(language: Language) -> None:
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —è–∑—ã–∫ –¥–ª—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏.
    
    Args:
        language: –ù–æ–≤—ã–π —è–∑—ã–∫
    """
    localizer.set_language(language)
